#! /usr/bin/env bash
export TRASH_DIR=~/.trash
if [ ! -d "${TRASH_DIR}" ]; then
    mkdir -p ${TRASH_DIR}
fi
alias rm=trash
#alias r=trash
alias rl=listtrash
alias ur=undelfile
alias cr=cleartrash

function abspath()
{
    if [ $# -ne 1 ]; then
        echo "Only one parameter is required." 1>&2
        return 1
    fi

    local CUR="$(pwd)"
    local relative_path=$1
    local dir_array=()
    local i=0

    if [ "${relative_path:0:1}" != '/' ]; then
        relative_path="${CUR}/${relative_path}"
    fi

    while [ x"${relative_path}" != x"" ]; do
        dir_array[${i}]=${relative_path%%/*}
        relative_path=${relative_path#*/}
        if [ x"${dir_array[${i}]}" == x"${relative_path}" ]; then
            break
        fi
        let i++
    done

    local abs_path=""
    local back_num=0
    i="${#dir_array[@]}"
    while [ "${i}" -gt 0 ]; do
        let i--
        if [ "${dir_array[${i}]}" == "." ] || [ x"${dir_array[${i}]}" == x"" ]; then
            continue
        elif [ "${dir_array[${i}]}" == ".." ]; then
            let back_num++
            continue
        fi
        if [ "${back_num}" -gt 0 ]; then
            let back_num--
            continue
        fi
        abs_path="${dir_array[${i}]}/${abs_path}"
    done

    if [ "${1: -1:1}" != "/" ]; then
        abs_path=${abs_path%\/}
    fi
    echo "/${abs_path}"
    return 0
}

function trash()
{
    local fname_in
    local fname
    local fname_out
    for fname in "$@"; do
        if [ "${fname:0:1}" == "-" ]; then
            echo "${fname} is a invalid file or directory name" 1>&2
            continue
        fi
        # convert to absolute path
        fname_out=$(abspath "${fname}")
        if [ "$?" != "0" ]; then
            echo "Convert ${fname} to abspath failed" 1>&2
            continue
        fi
        if [ ! -d "${fname}" ] && [ ! -f "${fname}" ] && [ ! -L "${fname}" ]; then
            echo "${fname} is not exists" 1>&2
            continue
        fi
        fname_in="${TRASH_DIR}"/"${fname_out//\//%}"
        mv -i "${fname_out}" "${fname_in}"
    done
}

function undelfile()
{
    local fname_in
    local fname
    local fname_out
    local dirname_out
    for fname in "$@"; do
        if [ "${fname:0:1}" == "-" ]; then
            echo "${1} is invalid file or directory name" 1>&2
            continue
        fi
        fname_out="$(abspath "${fname}")"
        fname_in="${TRASH_DIR}"/"${fname_out//\//%}"
        echo "${fname_in}" | grep -q '*'
        if [ "$?" == "0" ]; then
            local SAVEIFS=$IFS
            IFS=$(echo -en "\n\b")
            local fname_out1
            local fname_in1
            for fname_in1 in ${fname_in}; do
                fname_out1="$(basename ${fname_in1})"
                fname_out1="${fname_out1//%/\/}"
                if [ ! -d "${fname_in1}" ] && [ ! -f "${fname_in1}" ] && [ ! -L "${fname_in1}" ]; then
                    echo "${fname_out1} is not in trash" 1>&2
                    continue
                fi
                mv -i "${fname_in1}" "${fname_out1}"
            done
            IFS=$SAVEIFS
        else
            if [ ! -d "${fname_in}" ] && [ ! -f "${fname_in}" ] && [ ! -L "${fname_in}" ]; then
                echo "${fname} is not in trash" 1>&2
                continue
            fi
            dirname_out="$(dirname "${fname_out}")"
            if [ ! -d "${dirname_out}" ]; then
                mkdir -p "${dirname_out}"
            fi
            mv -i "${fname_in}" "${fname}"
        fi
    done
}

function listtrash()
{
    local name
    local realname
    for name in "${TRASH_DIR}"/*; do
        if [ "$name" = "${TRASH_DIR}/*" ]; then
            echo "trash is empty"
            break
        fi
        realname="$(basename "${name}")"
        realname="${realname//%/\/}"
        if [ -d "${name}" ]; then
            echo -e "\033[36m${realname}\033[0m"
        else
            echo "${realname}"
        fi
    done
}

function cleartrash()
{
    read -p "clear sure? [y/N] " confirm
    if [ "$confirm" == 'y' ] || [ "$confirm" == 'Y' ]; then
         /bin/rm -rf "${TRASH_DIR}"/.[!.]* "${TRASH_DIR}"/*
    fi
}
